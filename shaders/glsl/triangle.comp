#version 450
#extension GL_ARB_separate_shader_objects : enable

layout(local_size_x = 1, local_size_y = 1, local_size_z = 1) in;

layout(set = 0, binding = 0, rgba8) uniform image2D writeToImage;

struct Ray
{
  vec3 _origin;
  vec3 _direction;
};

vec3 getColor(Ray r)
{
  vec3 normDir = normalize(r._direction);
  float t = 0.5 * (normDir.y + 1.0);
  vec3 color = (1.0-t) * vec3(1.0, 1.0, 1.0) + t*vec3(0.5, 0.7, 1.0);
  return color;
}

void main()
{
  vec3 lowerLeftCorner = vec3(-2.0, 1.0, -1.0);
  vec3 horizontal = vec3(4.0, 0.0, 0.0);
  vec3 vertical = vec3(0.0, 2.0, 0.0);
  vec3 origin = vec3(0.0, 0.0, 0.0);
  
  ivec2 iSize = imageSize(writeToImage);
  vec2 uv = vec2(iSize - gl_GlobalInvocationID.xy)/vec2(iSize);

  Ray ray;
  ray._origin = origin;
  ray._direction = lowerLeftCorner+uv.x*horizontal+uv.y*vertical;
  
  vec3 color = getColor(ray);
  imageStore(writeToImage, ivec2(gl_GlobalInvocationID.xy), vec4(color.rgb, 1.0));
}
